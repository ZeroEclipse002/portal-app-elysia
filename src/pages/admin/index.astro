---
import { UsersTable } from "@/components/UsersTable";
import { PostsTable } from "@/components/PostsTable";
import Layout from "@/layouts/Layout.astro";
import { db } from "@/db";
import { PriorityPostsTable } from "@/components/PriorityPostsTable";
import { RequestsTable } from "@/components/requests/RequestsTable";
import { sql } from "drizzle-orm";
import { HighlightsTable } from "@/components/HighlightsTable";
import { DownloadableTable } from "@/components/DownloadableTable";
import { getPosts } from "@/db/queries";
import PostsTableNest from "@/components/PostsTableNest.astro";
import UserStatistics from "@/components/UserStatistics.astro";

if (Astro.locals.user?.role !== "admin") {
  return Astro.redirect("/");
}
---

<Layout>
  <main class="min-h-screen bg-gradient-to-b from-red-50 to-white">
    <div class="container mx-auto px-4 py-8 space-y-8">
      <h1 class="text-3xl font-bold text-red-900 mb-8">Admin Dashboard</h1>

      <section class="grid gap-6 lg:grid-cols-2">
        <UserStatistics server:defer>
          <div slot="fallback">
            <div class="flex items-center justify-center py-12">
              <div class="relative">
                <div
                  class="w-8 h-8 border-2 border-red-200 rounded-full animate-ping absolute"
                >
                </div>
                <div
                  class="w-8 h-8 border-2 border-red-800 rounded-full border-t-transparent animate-spin"
                >
                </div>
              </div>
            </div>
          </div>
        </UserStatistics>

        <!-- Users Section -->
        <div
          class="lg:col-span-2 bg-white rounded-xl shadow-sm border border-slate-200 transition-all duration-200 hover:shadow-md overflow-hidden accordion-section"
          data-section="users"
          id="userssection"
        >
          <div
            class="p-6 border-b border-slate-100 flex items-center justify-between cursor-pointer accordion-header"
            onclick="toggleAccordion('users')"
          >
            <div class="flex items-center gap-3">
              <svg
                class="w-6 h-6 text-blue-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
                ></path>
              </svg>
              <div>
                <h2 class="text-xl font-semibold text-slate-800">Users</h2>
                <p class="text-sm text-slate-500 mt-1">
                  Manage user accounts and permissions
                </p>
              </div>
            </div>
            <svg
              class="w-5 h-5 text-slate-500 transition-transform duration-200 accordion-icon"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
          <div class="accordion-content">
            <div class="p-6">
              <UsersTable client:only="react" />
            </div>
          </div>
        </div>

        <!-- Posts Section -->
        <div
          class="bg-white rounded-xl shadow-sm border border-slate-200 transition-all duration-200 hover:shadow-md overflow-hidden accordion-section"
          data-section="posts"
        >
          <div
            class="p-6 border-b border-slate-100 flex items-center justify-between cursor-pointer accordion-header"
            onclick="toggleAccordion('posts')"
          >
            <div class="flex items-center gap-3">
              <svg
                class="w-6 h-6 text-green-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                ></path>
              </svg>
              <div>
                <h2 class="text-xl font-semibold text-slate-800">Posts</h2>
                <p class="text-sm text-slate-500 mt-1">
                  Manage content and articles
                </p>
              </div>
            </div>
            <svg
              class="w-5 h-5 text-slate-500 transition-transform duration-200 accordion-icon"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
          <div class="accordion-content">
            <div class="p-6">
              <PostsTableNest server:defer>
                <div
                  slot="fallback"
                  class="flex items-center justify-center py-12"
                >
                  <div class="relative">
                    <div
                      class="w-8 h-8 border-2 border-slate-200 rounded-full animate-ping absolute"
                    >
                    </div>
                    <div
                      class="w-8 h-8 border-2 border-slate-800 rounded-full border-t-transparent animate-spin"
                    >
                    </div>
                  </div>
                </div>
              </PostsTableNest>
            </div>
          </div>
        </div>

        <!-- Priority Posts Section -->
        <div
          class="bg-white rounded-xl shadow-sm border border-slate-200 transition-all duration-200 hover:shadow-md overflow-hidden accordion-section"
          data-section="priority-posts"
        >
          <div
            class="p-6 border-b border-slate-100 flex items-center justify-between cursor-pointer accordion-header"
            onclick="toggleAccordion('priority-posts')"
          >
            <div class="flex items-center gap-3">
              <svg
                class="w-6 h-6 text-yellow-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                ></path>
              </svg>
              <div>
                <h2 class="text-xl font-semibold text-slate-800">
                  Priority Posts
                </h2>
                <p class="text-sm text-slate-500 mt-1">
                  Manage featured and important content
                </p>
              </div>
            </div>
            <svg
              class="w-5 h-5 text-slate-500 transition-transform duration-200 accordion-icon"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
          <div class="accordion-content">
            <div class="p-6">
              <PriorityPostsTable client:only="react" />
            </div>
          </div>
        </div>

        <!-- Highlights Section -->
        <div
          class="bg-white rounded-xl shadow-sm border border-slate-200 transition-all duration-200 hover:shadow-md overflow-hidden accordion-section"
          data-section="highlights"
        >
          <div
            class="p-6 border-b border-slate-100 flex items-center justify-between cursor-pointer accordion-header"
            onclick="toggleAccordion('highlights')"
          >
            <div class="flex items-center gap-3">
              <svg
                class="w-6 h-6 text-purple-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                ></path>
              </svg>
              <div>
                <h2 class="text-xl font-semibold text-slate-800">Highlights</h2>
                <p class="text-sm text-slate-500 mt-1">
                  Manage featured images and captions
                </p>
              </div>
            </div>
            <svg
              class="w-5 h-5 text-slate-500 transition-transform duration-200 accordion-icon"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
          <div class="accordion-content">
            <div class="p-6">
              <HighlightsTable client:only="react" />
            </div>
          </div>
        </div>

        <!-- Downloadable Content Section -->
        <div
          class="bg-white rounded-xl shadow-sm border border-slate-200 transition-all duration-200 hover:shadow-md overflow-hidden accordion-section"
          data-section="downloadable"
        >
          <div
            class="p-6 border-b border-slate-100 flex items-center justify-between cursor-pointer accordion-header"
            onclick="toggleAccordion('downloadable')"
          >
            <div class="flex items-center gap-3">
              <svg
                class="w-6 h-6 text-indigo-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                ></path>
              </svg>
              <div>
                <h2 class="text-xl font-semibold text-slate-800">
                  Downloadable Content
                </h2>
                <p class="text-sm text-slate-500 mt-1">
                  Manage documents and resources
                </p>
              </div>
            </div>
            <svg
              class="w-5 h-5 text-slate-500 transition-transform duration-200 accordion-icon"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
          <div class="accordion-content">
            <div class="p-6">
              <DownloadableTable client:only="react" />
            </div>
          </div>
        </div>
      </section>
    </div>
  </main>

  <style>
    .accordion-content {
      max-height: 1000px;
      overflow: hidden;
      transition: max-height 0.3s ease-out;
    }

    .accordion-section.collapsed .accordion-content {
      max-height: 0;
    }

    .accordion-section.collapsed .accordion-icon {
      transform: rotate(-90deg);
    }

    .accordion-header:hover {
      background-color: rgba(248, 250, 252, 0.5);
    }
  </style>

  <script>
    // Declare the function type for TypeScript
    declare global {
      interface Window {
        toggleAccordion: (sectionId: string) => void;
      }
    }

    // Make function global so inline onclick handlers can access it
    window.toggleAccordion = function (sectionId: string) {
      const section = document.querySelector(`[data-section="${sectionId}"]`);
      if (section) {
        section.classList.toggle("collapsed");
      }
    };

    document.addEventListener("astro:page-load", function () {
      // Initialize all sections as collapsed by default
      const sections = document.querySelectorAll(".accordion-section");
      sections.forEach((section) => section.classList.add("collapsed"));
      // Check URL params for users=open
      const searchParams = new URLSearchParams(window.location.search);
      if (searchParams.get("users") === "open") {
        const usersSection = document.querySelector('[data-section="users"]');
        if (usersSection) {
          usersSection.classList.remove("collapsed");
        }
      }
    });
  </script>
</Layout>
